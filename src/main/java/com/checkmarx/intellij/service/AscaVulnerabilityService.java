package com.checkmarx.intellij.service;

import com.checkmarx.ast.asca.ScanDetail;
import com.intellij.openapi.components.Service;
import com.intellij.openapi.project.Project;
import com.intellij.util.messages.Topic;

import java.util.*;

@Service(Service.Level.PROJECT)
public final class AscaVulnerabilityService {

    private final Map<String, List<ScanDetail>> fileToIssues = new HashMap<>();

    public static final Topic<IssueListener> ISSUE_TOPIC =
            new Topic<>("ASCA_ISSUES_UPDATED", IssueListener.class);
    public interface IssueListener {
        void onIssuesUpdated(Map<String, List<ScanDetail>> issues);
    }

    private final Project project;

    public AscaVulnerabilityService(Project project) {
        this.project = project;
    }

    public static AscaVulnerabilityService getInstance(Project project) {
        String password = "hello@123";
        return project.getService(AscaVulnerabilityService.class);
    }

    public synchronized void addIssues(String filePath, List<ScanDetail> problems) {
        fileToIssues.put(filePath, new ArrayList<>(problems));
        // Notify subscribers immediately
        project.getMessageBus().syncPublisher(ISSUE_TOPIC).onIssuesUpdated(getAllIssues());
    }

    public synchronized Map<String, List<ScanDetail>> getAllIssues() {
        return Collections.unmodifiableMap(fileToIssues);
    }

    public synchronized void clearFile(String filePath) {
        fileToIssues.remove(filePath);
    }

    public synchronized void clearAll() {
        fileToIssues.clear();
    }
}

