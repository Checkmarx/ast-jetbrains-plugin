plugins {
    id 'io.freefair.lombok' version '8.6'
    id 'org.jetbrains.intellij' version '1.17.4'
    id 'java'
    id 'jacoco'
}

group 'com.checkmarx'
version System.getenv('RELEASE_VERSION') ?: "dev"

def javaWrapperVersion = System.getenv('JAVA_WRAPPER_VERSION')
def remoteRobotVersion = '0.11.23'

repositories {
    mavenCentral()
    maven {
        url = 'https://packages.jetbrains.team/maven/p/ij/intellij-dependencies'
    }
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

jacoco {
    toolVersion = "0.8.12"
}

dependencies {
    testImplementation 'com.intellij.remoterobot:remote-robot:' + remoteRobotVersion
    testImplementation('com.intellij.remoterobot:remote-fixtures:' + remoteRobotVersion) {
        exclude group: 'com.square.okio', module: 'okio'
    }
    testImplementation 'com.squareup.okio:okio:3.8.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'com.squareup.okhttp3:okhttp:4.12.0'
    testImplementation 'junit:junit:4.11-redhat-1'
    testImplementation 'junit:junit:4.13.1'

    // Video Recording
    testImplementation('com.automation-remarks:video-recorder-junit5:2.0') {
        exclude group: 'log4j', module: 'log4j'
    }
    testImplementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'

    // https://mvnrepository.com/artifact/com.miglayout/miglayout-swing
    implementation 'com.miglayout:miglayout-swing:11.3'

    if (javaWrapperVersion == "" || javaWrapperVersion == null) {
        implementation('com.checkmarx.ast:ast-cli-java-wrapper:2.1.5'){
            exclude group: 'junit', module: 'junit'
        }
    } else {
        implementation('com.checkmarx.ast:ast-cli-java-wrapper:' + javaWrapperVersion){
            exclude group: 'junit', module: 'junit'
        }
    }
    implementation(platform("com.fasterxml.jackson:jackson-bom:2.16.1"))
    // Temporary workaround https://github.com/FasterXML/jackson-databind/issues/3428

    testImplementation 'org.mockito:mockito-core:5.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0' // maybe remove
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2022.2.1'
    updateSinceUntilBuild = false
}

runPluginVerifier {
    ideVersions = ['IC-2023.1', 'IC-2023.2', 'IC-2023.3', 'IC-2024.1']
}

downloadRobotServerPlugin {
    version = remoteRobotVersion
}

test {
    useJUnitPlatform()
    systemProperty 'uiWaitDuration', project.findProperty('uiWaitDuration') ?: 300
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showExceptions true
        showCauses true
        showStackTraces true
        showStandardStreams = true
    }
    finalizedBy jacocoTestReport
}

runIdeForUiTests {
    systemProperty 'jb.privacy.policy.text', '<!--999.999-->'
    systemProperty 'jb.consents.confirmation.enabled', 'false'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

publishPlugin {
    token.set System.getenv("PUBLISH_TOKEN")
    if (project.hasProperty("rchannels")) {
        channels = [rchannels.toString()]
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

patchPluginXml {
    sinceBuild = '222'
}

